# Simple workflow for deploying static content to GitHub Pages
name: Deploy content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: Gr1N/setup-poetry@v8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock')}}

      - uses: actions/cache@v2
        with:
          path: ./distributions
          key: repos-${{ hashFiles('config/*.yaml')}}

      - run: poetry install
      - run: mkdir -p distributions/

      - run: poetry run ./src/osr_dashboard/command/sync.py --config ./config/gazebo.yaml
      - run: poetry run ./src/osr_dashboard/command/compute.py --config ./config/gazebo.yaml

      - run: poetry run ./src/osr_dashboard/command/sync.py --config ./config/ros2.yaml
      - run: poetry run ./src/osr_dashboard/command/compute.py --config ./config/ros2.yaml

      - run: mv *.json pages/

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'pages'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
